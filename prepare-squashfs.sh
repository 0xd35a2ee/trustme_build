#!/bin/bash
#
# This file is part of trust|me
# Copyright(c) 2013 - 2017 Fraunhofer AISEC
# Fraunhofer-Gesellschaft zur FÃ¶rderung der angewandten Forschung e.V.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms and conditions of the GNU General Public License,
# version 2 (GPL 2), as published by the Free Software Foundation.
#
# This program is distributed in the hope it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GPL 2 license for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, see <http://www.gnu.org/licenses/>
#
# The full GNU General Public License is included in this distribution in
# the file called "COPYING".
#
# Contact Information:
# Fraunhofer AISEC <trustme@aisec.fraunhofer.de>
#

aosp_root=${1}
root_dir=${2}
squash_pf_file=${3}
squash_prep_sh=$(readlink -f ${4})

if [ "$#" -ne 4 ]; then
	echo "Usage: [aosp_root] [root_dir] [squashfs pseudo file] [squashfs preparation script]"
	exit 1
fi

trustme_build=$(dirname ${0})

IFS=$(echo -en '\n\b')

### generate squashfs config file for pseudo files (-pf)
header=${aosp_root}/system/core/include/private/android_filesystem_config.h
excludes="^(dev|sys|system|data|cache|firmware|persist|efs)/.*"

echo -e "# squashfs pseudo file list (-pf)\n# generated by" \
	"${0}\n#\t${1}\n#\t${2}\n#\t${3}\n# at $(date)" > ${squash_pf_file}
for i in $(grep -h mkdir ${root_dir}/init*.rc |
	sed -e 's/^[ \t]*mkdir//' | sed -e 's/[ \t]*\///');
do
	if [[ "${i}" =~ ${excludes} || "${i}" =~ ^# ]]; then
		continue;
	fi
	target=$(echo ${i} | awk '{print $1}')
	mode=$(echo ${i} | awk '{print $2}'| sed -e 's/^0//') 
	if [ -z $mode ]; then
		mode=755 
	fi
	user=$(echo ${i} | awk '{print $3}')
	group=$(echo ${i} | awk '{print $4}')
	if [ -z $user ]; then
		uid=0
	else
		uid=$(grep -i "define AID_${user}\s" ${header} | awk '{print $3}')
	fi
	if [ -z $group ]; then
		gid=0
	else
		gid=$(grep -i "define AID_${group}\s" ${header} | awk '{print $3}')
	fi
	echo $target d $mode $uid $gid >> ${squash_pf_file}
done

#######################################################
### generate prepareation script
#######################################################
echo "#!/bin/sh" > ${squash_prep_sh}
echo "target_path=\${1}" >> ${squash_prep_sh}

echo "cd \${target_path}" >> ${squash_prep_sh}

cd ${root_dir}

### generate directories in out final root directory
excludes="^(dev|sys|system|data|cache|firmware|persist|efs)/.*"

echo -e "# squashfs pseudo file list (-pf)\n# generated by" \
	"${0}\n#\t${1}\n#\t${2}\n#\t${3}#\t${4}\n# at $(date)\n" >> ${squash_prep_sh}
echo "echo "Generating symlinks in \${target_path}"" >> ${squash_prep_sh}
for i in $(grep -h mkdir init*.rc |
	sed -e 's/^[ \t]*mkdir//' | sed -e 's/[ \t]*\///');
do
	if [[ "${i}" =~ ${excludes} || "${i}" =~ ^# ]]; then
		continue;
	fi
	target=$(echo ${i} | awk '{print $1}')
	echo "echo -e "\t\t mkdir ${target}"" >> ${squash_prep_sh}
	echo "mkdir -p -m 755 "${target}"" >> ${squash_prep_sh}
done

### generate symlinks in out final root directory
excludes=".*\s(dev|system|data|cache|firmware|persist|efs).*"

echo -e "# squashfs symlink script \n# generated by" \
	"${0}\n#\t${1}\n#\t${2}\n#\t${3}#\t${4}\n# at $(date)\n" >> ${squash_prep_sh}
echo "echo "Generating symlinks in \${target_path}"" >> ${squash_prep_sh}
for i in $(grep -h symlink init*.rc | 
	sed -e 's/^[ \t]*//' | sed -e 's/ \// /2' | sed -e 's/symlink //');
do
	if [[ "${i}" =~ ${excludes} || "${i}" =~ ^# ]]; then
		continue;
	fi
	src=$(echo ${i} | awk '{print $1}')
	target=$(echo ${i} | awk '{print $2}')
	echo "echo -e "\t\t symlink ${src} ${target}"" >> ${squash_prep_sh}
	echo "mkdir -p -m 755 \$(dirname "${target}")" >> ${squash_prep_sh}
	echo "ln -sf ${src} ${target}" >> ${squash_prep_sh}
done
echo ""

chmod 777 ${squash_prep_sh}
